# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarQube analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# (this feature is available starting from SonarQube 9.7, Developer Edition and above)

# 1. Make sure you add a valid GitHub configuration to your SonarQube (Administration > DevOps platforms > GitHub)

# 2. Import your project on SonarQube
#     * Add your repository as a new project by clicking "Create project" from your homepage.
#
# 3. Select GitHub Actions as your CI and follow the tutorial
#     * a. Generate a new token and add it to your GitHub repository's secrets using the name SONAR_TOKEN
#          (On SonarQube, click on your avatar on top-right > My account > Security or ask your administrator)
#
#     * b. Copy/paste your SonarQube host URL to your GitHub repository's secrets using the name SONAR_HOST_URL
#
#     * c. Copy/paste the project Key into the args parameter below
#          (You'll find this information in SonarQube by following the tutorial or by clicking on Project Information at the top-right of your project's homepage)

# Feel free to take a look at our documentation (https://docs.sonarqube.org/latest/analysis/github-integration/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/sq/10)
name: SonarQube Comprehensive Scan

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu'

    - name: Install dependencies
      run: |
        # Instalar dependencias necesarias
        sudo apt-get update
        sudo apt-get install -y build-essential wget unzip

    - name: Download Build Wrapper
      run: |
        wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
        unzip build-wrapper-linux-x86.zip

    - name: Prepare Compilation Database
      run: |
        # Si tu proyecto usa Makefile
        make clean
        ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make

        # Si no tienes Makefile, sustituye con comandos de compilaciÃ³n de tu proyecto
        # Ejemplo para un proyecto PHP/web:
        # ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output composer install

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=bwapp
          -Dsonar.organization=purrfectwarrior
          -Dsonar.cfamily.compile-commands=bw-output/compile_commands.json
          -Dsonar.c.file.suffixes=-
          -Dsonar.cpp.file.suffixes=-
